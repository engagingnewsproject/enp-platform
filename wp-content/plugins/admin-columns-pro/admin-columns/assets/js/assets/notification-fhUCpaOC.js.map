{"version":3,"file":"notification-fhUCpaOC.js","sources":["../../../src/node_modules/svelte/src/runtime/internal/each.js","../../../src/ui/acui-notification/AcNotification.svelte","../../../src/js/ui-wrapper/notification.ts"],"sourcesContent":["import { transition_in, transition_out } from './transitions.js';\nimport { run_all } from './utils.js';\n\n// general each functions:\n\nexport function ensure_array_like(array_like_or_iterator) {\n\treturn array_like_or_iterator?.length !== undefined\n\t\t? array_like_or_iterator\n\t\t: Array.from(array_like_or_iterator);\n}\n\n// keyed each functions:\n\n/** @returns {void} */\nexport function destroy_block(block, lookup) {\n\tblock.d(1);\n\tlookup.delete(block.key);\n}\n\n/** @returns {void} */\nexport function outro_and_destroy_block(block, lookup) {\n\ttransition_out(block, 1, 1, () => {\n\t\tlookup.delete(block.key);\n\t});\n}\n\n/** @returns {void} */\nexport function fix_and_destroy_block(block, lookup) {\n\tblock.f();\n\tdestroy_block(block, lookup);\n}\n\n/** @returns {void} */\nexport function fix_and_outro_and_destroy_block(block, lookup) {\n\tblock.f();\n\toutro_and_destroy_block(block, lookup);\n}\n\n/** @returns {any[]} */\nexport function update_keyed_each(\n\told_blocks,\n\tdirty,\n\tget_key,\n\tdynamic,\n\tctx,\n\tlist,\n\tlookup,\n\tnode,\n\tdestroy,\n\tcreate_each_block,\n\tnext,\n\tget_context\n) {\n\tlet o = old_blocks.length;\n\tlet n = list.length;\n\tlet i = o;\n\tconst old_indexes = {};\n\twhile (i--) old_indexes[old_blocks[i].key] = i;\n\tconst new_blocks = [];\n\tconst new_lookup = new Map();\n\tconst deltas = new Map();\n\tconst updates = [];\n\ti = n;\n\twhile (i--) {\n\t\tconst child_ctx = get_context(ctx, list, i);\n\t\tconst key = get_key(child_ctx);\n\t\tlet block = lookup.get(key);\n\t\tif (!block) {\n\t\t\tblock = create_each_block(key, child_ctx);\n\t\t\tblock.c();\n\t\t} else if (dynamic) {\n\t\t\t// defer updates until all the DOM shuffling is done\n\t\t\tupdates.push(() => block.p(child_ctx, dirty));\n\t\t}\n\t\tnew_lookup.set(key, (new_blocks[i] = block));\n\t\tif (key in old_indexes) deltas.set(key, Math.abs(i - old_indexes[key]));\n\t}\n\tconst will_move = new Set();\n\tconst did_move = new Set();\n\t/** @returns {void} */\n\tfunction insert(block) {\n\t\ttransition_in(block, 1);\n\t\tblock.m(node, next);\n\t\tlookup.set(block.key, block);\n\t\tnext = block.first;\n\t\tn--;\n\t}\n\twhile (o && n) {\n\t\tconst new_block = new_blocks[n - 1];\n\t\tconst old_block = old_blocks[o - 1];\n\t\tconst new_key = new_block.key;\n\t\tconst old_key = old_block.key;\n\t\tif (new_block === old_block) {\n\t\t\t// do nothing\n\t\t\tnext = new_block.first;\n\t\t\to--;\n\t\t\tn--;\n\t\t} else if (!new_lookup.has(old_key)) {\n\t\t\t// remove old block\n\t\t\tdestroy(old_block, lookup);\n\t\t\to--;\n\t\t} else if (!lookup.has(new_key) || will_move.has(new_key)) {\n\t\t\tinsert(new_block);\n\t\t} else if (did_move.has(old_key)) {\n\t\t\to--;\n\t\t} else if (deltas.get(new_key) > deltas.get(old_key)) {\n\t\t\tdid_move.add(new_key);\n\t\t\tinsert(new_block);\n\t\t} else {\n\t\t\twill_move.add(old_key);\n\t\t\to--;\n\t\t}\n\t}\n\twhile (o--) {\n\t\tconst old_block = old_blocks[o];\n\t\tif (!new_lookup.has(old_block.key)) destroy(old_block, lookup);\n\t}\n\twhile (n) insert(new_blocks[n - 1]);\n\trun_all(updates);\n\treturn new_blocks;\n}\n\n/** @returns {void} */\nexport function validate_each_keys(ctx, list, get_context, get_key) {\n\tconst keys = new Map();\n\tfor (let i = 0; i < list.length; i++) {\n\t\tconst key = get_key(get_context(ctx, list, i));\n\t\tif (keys.has(key)) {\n\t\t\tlet value = '';\n\t\t\ttry {\n\t\t\t\tvalue = `with value '${String(key)}' `;\n\t\t\t} catch (e) {\n\t\t\t\t// can't stringify\n\t\t\t}\n\t\t\tthrow new Error(\n\t\t\t\t`Cannot have duplicate keys in a keyed each: Keys at index ${keys.get(\n\t\t\t\t\tkey\n\t\t\t\t)} and ${i} ${value}are duplicates`\n\t\t\t);\n\t\t}\n\t\tkeys.set(key, i);\n\t}\n}\n","<script lang=\"ts\">\n\n    import {createEventDispatcher, onMount} from \"svelte\";\n    import AcIcon from \"../AcIcon.svelte\";\n\n    export let active: boolean = true;\n    export let type: 'success' | 'warning' | 'error' | 'notify' | 'default' = 'default';\n    export let closable: boolean = true;\n    export let autoClose: boolean = false;\n    export let duration: number = 4000;\n    export let message: string = '';\n    export let hideIcon: boolean = false;\n\n    const dispatch = createEventDispatcher();\n\n    const close = () => {\n        active = false;\n        dispatch('close');\n    }\n\n    const closeHandle = () => {\n        close();\n    }\n\n    const determineIcon = (type: string) => {\n        switch (type) {\n            case 'success':\n                return 'yes-alt';\n            case 'warning':\n                return 'warning';\n            case 'error':\n                return 'dismiss';\n            case 'notify':\n                return 'bell';\n            default:\n                return 'info';\n        }\n    }\n\n    let icon = determineIcon(type);\n\n    onMount(() => {\n        if (autoClose) {\n            setTimeout(() => {\n                close();\n            }, duration);\n        }\n\n        icon = determineIcon(type);\n\n    });\n\n    $: className = '-' + type;\n\n</script>\n<article\n\tclass=\"acui-notification {className}\"\n\tclass:-closable={closable}\n\tstyle:display={ active ? null : 'none'}>\n\t{#if closable && ! autoClose }\n\t\t<button aria-label=\"Close notification\" class=\"acui-notification-close\" on:click={closeHandle}>\n\t\t\t<span class=\"dashicons dashicons-no\"></span>\n\t\t</button>\n\t{/if}\n\t<div class=\"acui-notification-media\">\n\t\t{#if ! hideIcon}\n\t\t\t<div class=\"ac-notification-media__left\">\n\t\t\t\t<AcIcon icon={icon} pack=\"dashicons\"/>\n\t\t\t</div>\n\t\t{/if}\n\t\t<div class=\"ac-notification-media__content\">\n\t\t\t<slot></slot>{@html message}\n\t\t</div>\n\t</div>\n</article>","import AcNotification from \"ACUi/acui-notification/AcNotification.svelte\";\nimport AcHtmlElement from \"../helpers/html-element\";\n\nconst SELECTOR = 'acui-notifications';\n\ntype notificationArguments = {\n    message: string,\n    type?: 'success' | 'warning' | 'notify' | 'default' | 'error';\n    duration?: number\n    closable?: boolean\n    autoClose?: boolean\n    active?: boolean\n    hideIcon?: boolean\n}\n\nexport class NotificationProgrammatic {\n\n    static open(args: notificationArguments | string) {\n        const container = document.createElement('div')!;\n\n        if (typeof args === 'string') {\n            args = {\n                message: args\n            }\n        }\n\n        const finalArgs = Object.assign({\n            autoClose: true\n        }, args)\n\n        initNotificationContainer().append(container);\n\n\n        const notification = new AcNotification({\n            target: container,\n            // @ts-ignore\n            props: finalArgs,\n        });\n\n        notification.$on('close', () => {\n            notification.$destroy();\n        })\n    }\n\n}\n\nconst initNotificationContainer = (): HTMLElement => {\n    let container = document.querySelector<HTMLElement>(`.${SELECTOR}`);\n\n    if (container) {\n        return container;\n    }\n\n    const newContainer = AcHtmlElement.create('div').addClass(SELECTOR).getElement();\n\n    document.body.append(newContainer);\n\n    return newContainer;\n}\n"],"names":["ensure_array_like","array_like_or_iterator","insert","target","button","anchor","ctx","div","if_block0","create_if_block_1","create_if_block","article","append","div1","div0","SELECTOR","NotificationProgrammatic","args","container","finalArgs","initNotificationContainer","notification","AcNotification","newContainer","AcHtmlElement"],"mappings":"8QAKO,SAASA,GAAkBC,EAAwB,CACzD,OAAOA,GAAA,YAAAA,EAAwB,UAAW,OACvCA,EACA,MAAM,KAAKA,CAAsB,CACrC,mMCmDEC,EAEQC,EAAAC,EAAAC,CAAA,oBAF0EC,EAAW,CAAA,CAAA,8FAO7EA,EAAI,CAAA,EAAA,KAAA,WAAA,wFADnBJ,EAEKC,EAAAI,EAAAF,CAAA,oDADUC,EAAI,CAAA,qIARhBE,EAAAF,OAAcA,EAAS,CAAA,GAAAG,EAAAH,CAAA,KAMpBA,EAAQ,CAAA,GAAAI,EAAAJ,CAAA,gRATUA,EAAS,CAAA,CAAA,kBAClBA,EAAQ,CAAA,CAAA,gBACTA,EAAM,CAAA,EAAG,KAAO,MAAM,UAHvCJ,EAmBSC,EAAAQ,EAAAN,CAAA,wBAVRO,EASKD,EAAAE,CAAA,wBAHJD,EAEKC,EAAAC,CAAA,qBADgBR,EAAO,CAAA,EAAAQ,CAAA,iBAZxBR,OAAcA,EAAS,CAAA,wDAMpBA,EAAQ,CAAA,oLAMMA,EAAO,CAAA,CAAA,yCAfHA,EAAS,CAAA,gDAClBA,EAAQ,CAAA,CAAA,qBACTA,EAAM,CAAA,EAAG,KAAO,MAAM,ggCCvDvC,MAAMS,EAAW,qBAYV,MAAMC,EAAyB,CAElC,OAAO,KAAKC,EAAsC,CACxC,MAAAC,EAAY,SAAS,cAAc,KAAK,EAE1C,OAAOD,GAAS,WACTA,EAAA,CACH,QAASA,CACb,GAGE,MAAAE,EAAY,OAAO,OAAO,CAC5B,UAAW,IACZF,CAAI,EAEmBG,EAAA,EAAE,OAAOF,CAAS,EAGtC,MAAAG,EAAe,IAAIC,EAAe,CACpC,OAAQJ,EAER,MAAOC,CAAA,CACV,EAEYE,EAAA,IAAI,QAAS,IAAM,CAC5BA,EAAa,SAAS,CAAA,CACzB,CAAA,CAGT,CAEA,MAAMD,EAA4B,IAAmB,CACjD,IAAIF,EAAY,SAAS,cAA2B,IAAIH,CAAQ,EAAE,EAElE,GAAIG,EACO,OAAAA,EAGL,MAAAK,EAAeC,EAAc,OAAO,KAAK,EAAE,SAAST,CAAQ,EAAE,WAAW,EAEtE,gBAAA,KAAK,OAAOQ,CAAY,EAE1BA,CACX","x_google_ignoreList":[0]}